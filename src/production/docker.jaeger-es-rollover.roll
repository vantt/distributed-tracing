#!/bin/bash
#
# https://medium.com/jaegertracing/using-elasticsearch-rollover-to-manage-indices-8b3d0c77915d
#

if [ -f .env ]; then
    source .env
fi

# STEP 1
# The following command executes rollover API which rolls the write alias to a new index based on supplied conditions. The command also adds a new index to read alias to make new data available for search.
docker run \
    --name distributed-tracing_jaeger-es-rollover_roll-step-1 \
    \
    --rm \
    \
    -e CONDITIONS='{"max_age": "1d"}' \
    \
    --network=my-net \
    \
    jaegertracing/jaeger-es-rollover:1.21 \
    \
    rollover http://elasticsearch:9200

# STEP 2 (OPTIONAL)
# The next step is to remove old indices from read aliases. It means that old data will not be available for search. This imitates the behavior of --es.max-span-age flag used in the default index-per-day deployment. This step could be optional and old indices could be simply removed by index cleaner in the next step.
docker run \
    --name distributed-tracing_jaeger-es-rollover_roll-step-2 \
    \
    --rm \
    \
    -e UNIT=days \
    -e UNIT_COUNT=3 \
    \
    --network=my-net \
    \
    jaegertracing/jaeger-es-rollover:1.21 \
    \
    lookback http://elasticsearch:9200

# STEP 3
# The historical data can be removed with the jaeger-es-index-cleaner that is also used for daily indices.
docker run \
    --name distributed-tracing_jaeger-es-rollover_roll-step-3 \
    \
    --rm \
    \
    -e ROLLOVER=true \
    \
    --network=my-net \
    \
    jaegertracing/jaeger-es-index-cleaner:1.21 \
    \
    3 http://elasticsearch:9200
